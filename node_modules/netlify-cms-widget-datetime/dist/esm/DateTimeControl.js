"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _core = require("@emotion/core");

var _reactDatetime = _interopRequireDefault(require("react-datetime/css/react-datetime.css"));

var _reactDatetime2 = _interopRequireDefault(require("react-datetime"));

var _moment = _interopRequireDefault(require("moment"));

var _netlifyCmsUiDefault = require("netlify-cms-ui-default");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

var _ref = process.env.NODE_ENV === "production" ? {
  name: "6zq5jn-NowButton",
  styles: "position:absolute;right:20px;transform:translateY(-40px);width:fit-content;z-index:1;;label:NowButton;"
} : {
  name: "6zq5jn-NowButton",
  styles: "position:absolute;right:20px;transform:translateY(-40px);width:fit-content;z-index:1;;label:NowButton;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9EYXRlVGltZUNvbnRyb2wuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBWWMiLCJmaWxlIjoiLi4vLi4vc3JjL0RhdGVUaW1lQ29udHJvbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBqc3gsIGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHJlYWN0RGF0ZVRpbWVTdHlsZXMgZnJvbSAncmVhY3QtZGF0ZXRpbWUvY3NzL3JlYWN0LWRhdGV0aW1lLmNzcyc7XG5pbXBvcnQgRGF0ZVRpbWUgZnJvbSAncmVhY3QtZGF0ZXRpbWUnO1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnO1xuaW1wb3J0IHsgYnV0dG9ucyB9IGZyb20gJ25ldGxpZnktY21zLXVpLWRlZmF1bHQnO1xuXG5mdW5jdGlvbiBOb3dCdXR0b24oeyB0LCBoYW5kbGVDaGFuZ2UgfSkge1xuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIGNzcz17Y3NzYFxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiAyMHB4O1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTQwcHgpO1xuICAgICAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgICBgfVxuICAgID5cbiAgICAgIDxidXR0b25cbiAgICAgICAgY3NzPXtjc3NgXG4gICAgJHtidXR0b25zLmJ1dHRvbn1cbiAgICAke2J1dHRvbnMuZGVmYXVsdH1cbiAgICAke2J1dHRvbnMubGlnaHRCbHVlfVxuICAgICR7YnV0dG9ucy5zbWFsbH1cbmB9XG4gICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICBoYW5kbGVDaGFuZ2UobW9tZW50KCkpO1xuICAgICAgICB9fVxuICAgICAgPlxuICAgICAgICB7dCgnZWRpdG9yLmVkaXRvcldpZGdldHMuZGF0ZXRpbWUubm93Jyl9XG4gICAgICA8L2J1dHRvbj5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGF0ZVRpbWVDb250cm9sIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBmaWVsZDogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIGZvcklEOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIG9uQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIGNsYXNzTmFtZVdyYXBwZXI6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICBzZXRBY3RpdmVTdHlsZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICBzZXRJbmFjdGl2ZVN0eWxlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIHZhbHVlOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuc3RyaW5nXSksXG4gIH07XG5cbiAgZ2V0Rm9ybWF0cygpIHtcbiAgICBjb25zdCB7IGZpZWxkIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IGZvcm1hdCA9IGZpZWxkLmdldCgnZm9ybWF0Jyk7XG5cbiAgICAvLyBkYXRlRm9ybWF0IGFuZCB0aW1lRm9ybWF0IGFyZSBzdHJpY3RseSBmb3IgbW9kaWZ5aW5nXG4gICAgLy8gaW5wdXQgZmllbGQgd2l0aCB0aGUgZGF0ZS90aW1lIHBpY2tlcnNcbiAgICBjb25zdCBkYXRlRm9ybWF0ID0gZmllbGQuZ2V0KCdkYXRlX2Zvcm1hdCcpO1xuICAgIC8vIHNob3cgdGltZS1waWNrZXI/IGZhbHNlIGhpZGVzIGl0LCB0cnVlIHNob3dzIGl0IHVzaW5nIGRlZmF1bHQgZm9ybWF0XG4gICAgbGV0IHRpbWVGb3JtYXQgPSBmaWVsZC5nZXQoJ3RpbWVfZm9ybWF0Jyk7XG4gICAgaWYgKHR5cGVvZiB0aW1lRm9ybWF0ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGltZUZvcm1hdCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIGZvcm1hdCxcbiAgICAgIGRhdGVGb3JtYXQsXG4gICAgICB0aW1lRm9ybWF0LFxuICAgIH07XG4gIH1cblxuICBnZXREZWZhdWx0VmFsdWUoKSB7XG4gICAgY29uc3QgeyBmaWVsZCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBkZWZhdWx0VmFsdWUgPSBmaWVsZC5nZXQoJ2RlZmF1bHQnKTtcbiAgICByZXR1cm4gZGVmYXVsdFZhbHVlO1xuICB9XG5cbiAgZ2V0UGlja2VyVXRjKCkge1xuICAgIGNvbnN0IHsgZmllbGQgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgcGlja2VyVXRjID0gZmllbGQuZ2V0KCdwaWNrZXJfdXRjJyk7XG4gICAgcmV0dXJuIHBpY2tlclV0YztcbiAgfVxuXG4gIGZvcm1hdHMgPSB0aGlzLmdldEZvcm1hdHMoKTtcbiAgZGVmYXVsdFZhbHVlID0gdGhpcy5nZXREZWZhdWx0VmFsdWUoKTtcbiAgcGlja2VyVXRjID0gdGhpcy5nZXRQaWNrZXJVdGMoKTtcblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBjb25zdCB7IHZhbHVlIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBjdXJyZW50IGRhdGUgYXMgZGVmYXVsdCB2YWx1ZSBpZiBubyB2YWx1ZSBpcyBwcm92aWRlZCBhbmQgZGVmYXVsdCBpcyBhYnNlbnQuIEFuXG4gICAgICogZW1wdHkgZGVmYXVsdCBzdHJpbmcgbWVhbnMgdGhlIHZhbHVlIGlzIGludGVudGlvbmFsbHkgYmxhbmsuXG4gICAgICovXG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLmhhbmRsZUNoYW5nZSh0aGlzLmRlZmF1bHRWYWx1ZSA9PT0gdW5kZWZpbmVkID8gbmV3IERhdGUoKSA6IHRoaXMuZGVmYXVsdFZhbHVlKTtcbiAgICAgIH0sIDApO1xuICAgIH1cbiAgfVxuXG4gIC8vIERhdGUgaXMgdmFsaWQgaWYgZGF0ZXRpbWUgaXMgYSBtb21lbnQgb3IgRGF0ZSBvYmplY3Qgb3RoZXJ3aXNlIGl0J3MgYSBzdHJpbmcuXG4gIC8vIEhhbmRsZSB0aGUgZW1wdHkgY2FzZSwgaWYgdGhlIHVzZXIgd2FudHMgdG8gZW1wdHkgdGhlIGZpZWxkLlxuICBpc1ZhbGlkRGF0ZSA9IGRhdGV0aW1lID0+XG4gICAgbW9tZW50LmlzTW9tZW50KGRhdGV0aW1lKSB8fCBkYXRldGltZSBpbnN0YW5jZW9mIERhdGUgfHwgZGF0ZXRpbWUgPT09ICcnO1xuXG4gIGhhbmRsZUNoYW5nZSA9IGRhdGV0aW1lID0+IHtcbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIGRhdGUgb25seSBpZiBpdCBpcyB2YWxpZC5cbiAgICAgKi9cbiAgICBpZiAoIXRoaXMuaXNWYWxpZERhdGUoZGF0ZXRpbWUpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgeyBvbkNoYW5nZSB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IGZvcm1hdCB9ID0gdGhpcy5mb3JtYXRzO1xuXG4gICAgLyoqXG4gICAgICogUHJvZHVjZSBhIGZvcm1hdHRlZCBzdHJpbmcgb25seSBpZiBhIGZvcm1hdCBpcyBzZXQgaW4gdGhlIGNvbmZpZy5cbiAgICAgKiBPdGhlcndpc2UgcHJvZHVjZSBhIGRhdGUgb2JqZWN0LlxuICAgICAqL1xuICAgIGlmIChmb3JtYXQpIHtcbiAgICAgIGNvbnN0IGZvcm1hdHRlZFZhbHVlID0gZGF0ZXRpbWUgPyBtb21lbnQoZGF0ZXRpbWUpLmZvcm1hdChmb3JtYXQpIDogJyc7XG4gICAgICBvbkNoYW5nZShmb3JtYXR0ZWRWYWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IHZhbHVlID0gbW9tZW50LmlzTW9tZW50KGRhdGV0aW1lKSA/IGRhdGV0aW1lLnRvRGF0ZSgpIDogZGF0ZXRpbWU7XG4gICAgICBvbkNoYW5nZSh2YWx1ZSk7XG4gICAgfVxuICB9O1xuXG4gIG9uQmx1ciA9IGRhdGV0aW1lID0+IHtcbiAgICBjb25zdCB7IHNldEluYWN0aXZlU3R5bGUgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBpZiAoIXRoaXMuaXNWYWxpZERhdGUoZGF0ZXRpbWUpKSB7XG4gICAgICBjb25zdCBwYXJzZWREYXRlID0gbW9tZW50KGRhdGV0aW1lKTtcblxuICAgICAgaWYgKHBhcnNlZERhdGUuaXNWYWxpZCgpKSB7XG4gICAgICAgIHRoaXMuaGFuZGxlQ2hhbmdlKGRhdGV0aW1lKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdpbmRvdy5hbGVydCgnVGhlIGRhdGUgeW91IGVudGVyZWQgaXMgaW52YWxpZC4nKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBzZXRJbmFjdGl2ZVN0eWxlKCk7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgZm9ySUQsIHZhbHVlLCBjbGFzc05hbWVXcmFwcGVyLCBzZXRBY3RpdmVTdHlsZSwgdCwgaXNEaXNhYmxlZCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IGZvcm1hdCwgZGF0ZUZvcm1hdCwgdGltZUZvcm1hdCB9ID0gdGhpcy5mb3JtYXRzO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgJHtyZWFjdERhdGVUaW1lU3R5bGVzfTtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIDxEYXRlVGltZVxuICAgICAgICAgIGRhdGVGb3JtYXQ9e2RhdGVGb3JtYXR9XG4gICAgICAgICAgdGltZUZvcm1hdD17dGltZUZvcm1hdH1cbiAgICAgICAgICB2YWx1ZT17bW9tZW50KHZhbHVlLCBmb3JtYXQpfVxuICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUNoYW5nZX1cbiAgICAgICAgICBvbkZvY3VzPXtzZXRBY3RpdmVTdHlsZX1cbiAgICAgICAgICBvbkJsdXI9e3RoaXMub25CbHVyfVxuICAgICAgICAgIGlucHV0UHJvcHM9e3sgY2xhc3NOYW1lOiBjbGFzc05hbWVXcmFwcGVyLCBpZDogZm9ySUQgfX1cbiAgICAgICAgICB1dGM9e3RoaXMucGlja2VyVXRjfVxuICAgICAgICAvPlxuICAgICAgICB7IWlzRGlzYWJsZWQgJiYgPE5vd0J1dHRvbiB0PXt0fSBoYW5kbGVDaGFuZ2U9e3YgPT4gdGhpcy5oYW5kbGVDaGFuZ2Uodil9IC8+fVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

function NowButton({
  t,
  handleChange
}) {
  return (0, _core.jsx)("div", {
    css: _ref
  }, (0, _core.jsx)("button", {
    css: /*#__PURE__*/(0, _core.css)(_netlifyCmsUiDefault.buttons.button, " ", _netlifyCmsUiDefault.buttons.default, " ", _netlifyCmsUiDefault.buttons.lightBlue, " ", _netlifyCmsUiDefault.buttons.small, ";label:NowButton;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9EYXRlVGltZUNvbnRyb2wuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUJnQiIsImZpbGUiOiIuLi8uLi9zcmMvRGF0ZVRpbWVDb250cm9sLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGpzeCwgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgcmVhY3REYXRlVGltZVN0eWxlcyBmcm9tICdyZWFjdC1kYXRldGltZS9jc3MvcmVhY3QtZGF0ZXRpbWUuY3NzJztcbmltcG9ydCBEYXRlVGltZSBmcm9tICdyZWFjdC1kYXRldGltZSc7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7XG5pbXBvcnQgeyBidXR0b25zIH0gZnJvbSAnbmV0bGlmeS1jbXMtdWktZGVmYXVsdCc7XG5cbmZ1bmN0aW9uIE5vd0J1dHRvbih7IHQsIGhhbmRsZUNoYW5nZSB9KSB7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY3NzPXtjc3NgXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgcmlnaHQ6IDIwcHg7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNDBweCk7XG4gICAgICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgICAgICAgei1pbmRleDogMTtcbiAgICAgIGB9XG4gICAgPlxuICAgICAgPGJ1dHRvblxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAke2J1dHRvbnMuYnV0dG9ufVxuICAgICR7YnV0dG9ucy5kZWZhdWx0fVxuICAgICR7YnV0dG9ucy5saWdodEJsdWV9XG4gICAgJHtidXR0b25zLnNtYWxsfVxuYH1cbiAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgIGhhbmRsZUNoYW5nZShtb21lbnQoKSk7XG4gICAgICAgIH19XG4gICAgICA+XG4gICAgICAgIHt0KCdlZGl0b3IuZWRpdG9yV2lkZ2V0cy5kYXRldGltZS5ub3cnKX1cbiAgICAgIDwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEYXRlVGltZUNvbnRyb2wgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIGZpZWxkOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgZm9ySUQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgY2xhc3NOYW1lV3JhcHBlcjogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIHNldEFjdGl2ZVN0eWxlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIHNldEluYWN0aXZlU3R5bGU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgdmFsdWU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5zdHJpbmddKSxcbiAgfTtcblxuICBnZXRGb3JtYXRzKCkge1xuICAgIGNvbnN0IHsgZmllbGQgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgZm9ybWF0ID0gZmllbGQuZ2V0KCdmb3JtYXQnKTtcblxuICAgIC8vIGRhdGVGb3JtYXQgYW5kIHRpbWVGb3JtYXQgYXJlIHN0cmljdGx5IGZvciBtb2RpZnlpbmdcbiAgICAvLyBpbnB1dCBmaWVsZCB3aXRoIHRoZSBkYXRlL3RpbWUgcGlja2Vyc1xuICAgIGNvbnN0IGRhdGVGb3JtYXQgPSBmaWVsZC5nZXQoJ2RhdGVfZm9ybWF0Jyk7XG4gICAgLy8gc2hvdyB0aW1lLXBpY2tlcj8gZmFsc2UgaGlkZXMgaXQsIHRydWUgc2hvd3MgaXQgdXNpbmcgZGVmYXVsdCBmb3JtYXRcbiAgICBsZXQgdGltZUZvcm1hdCA9IGZpZWxkLmdldCgndGltZV9mb3JtYXQnKTtcbiAgICBpZiAodHlwZW9mIHRpbWVGb3JtYXQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aW1lRm9ybWF0ID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgZm9ybWF0LFxuICAgICAgZGF0ZUZvcm1hdCxcbiAgICAgIHRpbWVGb3JtYXQsXG4gICAgfTtcbiAgfVxuXG4gIGdldERlZmF1bHRWYWx1ZSgpIHtcbiAgICBjb25zdCB7IGZpZWxkIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IGRlZmF1bHRWYWx1ZSA9IGZpZWxkLmdldCgnZGVmYXVsdCcpO1xuICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gIH1cblxuICBnZXRQaWNrZXJVdGMoKSB7XG4gICAgY29uc3QgeyBmaWVsZCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBwaWNrZXJVdGMgPSBmaWVsZC5nZXQoJ3BpY2tlcl91dGMnKTtcbiAgICByZXR1cm4gcGlja2VyVXRjO1xuICB9XG5cbiAgZm9ybWF0cyA9IHRoaXMuZ2V0Rm9ybWF0cygpO1xuICBkZWZhdWx0VmFsdWUgPSB0aGlzLmdldERlZmF1bHRWYWx1ZSgpO1xuICBwaWNrZXJVdGMgPSB0aGlzLmdldFBpY2tlclV0YygpO1xuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGNvbnN0IHsgdmFsdWUgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIGN1cnJlbnQgZGF0ZSBhcyBkZWZhdWx0IHZhbHVlIGlmIG5vIHZhbHVlIGlzIHByb3ZpZGVkIGFuZCBkZWZhdWx0IGlzIGFic2VudC4gQW5cbiAgICAgKiBlbXB0eSBkZWZhdWx0IHN0cmluZyBtZWFucyB0aGUgdmFsdWUgaXMgaW50ZW50aW9uYWxseSBibGFuay5cbiAgICAgKi9cbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMuaGFuZGxlQ2hhbmdlKHRoaXMuZGVmYXVsdFZhbHVlID09PSB1bmRlZmluZWQgPyBuZXcgRGF0ZSgpIDogdGhpcy5kZWZhdWx0VmFsdWUpO1xuICAgICAgfSwgMCk7XG4gICAgfVxuICB9XG5cbiAgLy8gRGF0ZSBpcyB2YWxpZCBpZiBkYXRldGltZSBpcyBhIG1vbWVudCBvciBEYXRlIG9iamVjdCBvdGhlcndpc2UgaXQncyBhIHN0cmluZy5cbiAgLy8gSGFuZGxlIHRoZSBlbXB0eSBjYXNlLCBpZiB0aGUgdXNlciB3YW50cyB0byBlbXB0eSB0aGUgZmllbGQuXG4gIGlzVmFsaWREYXRlID0gZGF0ZXRpbWUgPT5cbiAgICBtb21lbnQuaXNNb21lbnQoZGF0ZXRpbWUpIHx8IGRhdGV0aW1lIGluc3RhbmNlb2YgRGF0ZSB8fCBkYXRldGltZSA9PT0gJyc7XG5cbiAgaGFuZGxlQ2hhbmdlID0gZGF0ZXRpbWUgPT4ge1xuICAgIC8qKlxuICAgICAqIFNldCB0aGUgZGF0ZSBvbmx5IGlmIGl0IGlzIHZhbGlkLlxuICAgICAqL1xuICAgIGlmICghdGhpcy5pc1ZhbGlkRGF0ZShkYXRldGltZSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCB7IG9uQ2hhbmdlIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHsgZm9ybWF0IH0gPSB0aGlzLmZvcm1hdHM7XG5cbiAgICAvKipcbiAgICAgKiBQcm9kdWNlIGEgZm9ybWF0dGVkIHN0cmluZyBvbmx5IGlmIGEgZm9ybWF0IGlzIHNldCBpbiB0aGUgY29uZmlnLlxuICAgICAqIE90aGVyd2lzZSBwcm9kdWNlIGEgZGF0ZSBvYmplY3QuXG4gICAgICovXG4gICAgaWYgKGZvcm1hdCkge1xuICAgICAgY29uc3QgZm9ybWF0dGVkVmFsdWUgPSBkYXRldGltZSA/IG1vbWVudChkYXRldGltZSkuZm9ybWF0KGZvcm1hdCkgOiAnJztcbiAgICAgIG9uQ2hhbmdlKGZvcm1hdHRlZFZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgdmFsdWUgPSBtb21lbnQuaXNNb21lbnQoZGF0ZXRpbWUpID8gZGF0ZXRpbWUudG9EYXRlKCkgOiBkYXRldGltZTtcbiAgICAgIG9uQ2hhbmdlKHZhbHVlKTtcbiAgICB9XG4gIH07XG5cbiAgb25CbHVyID0gZGF0ZXRpbWUgPT4ge1xuICAgIGNvbnN0IHsgc2V0SW5hY3RpdmVTdHlsZSB9ID0gdGhpcy5wcm9wcztcblxuICAgIGlmICghdGhpcy5pc1ZhbGlkRGF0ZShkYXRldGltZSkpIHtcbiAgICAgIGNvbnN0IHBhcnNlZERhdGUgPSBtb21lbnQoZGF0ZXRpbWUpO1xuXG4gICAgICBpZiAocGFyc2VkRGF0ZS5pc1ZhbGlkKCkpIHtcbiAgICAgICAgdGhpcy5oYW5kbGVDaGFuZ2UoZGF0ZXRpbWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2luZG93LmFsZXJ0KCdUaGUgZGF0ZSB5b3UgZW50ZXJlZCBpcyBpbnZhbGlkLicpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHNldEluYWN0aXZlU3R5bGUoKTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBmb3JJRCwgdmFsdWUsIGNsYXNzTmFtZVdyYXBwZXIsIHNldEFjdGl2ZVN0eWxlLCB0LCBpc0Rpc2FibGVkIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHsgZm9ybWF0LCBkYXRlRm9ybWF0LCB0aW1lRm9ybWF0IH0gPSB0aGlzLmZvcm1hdHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdlxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAke3JlYWN0RGF0ZVRpbWVTdHlsZXN9O1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgYH1cbiAgICAgID5cbiAgICAgICAgPERhdGVUaW1lXG4gICAgICAgICAgZGF0ZUZvcm1hdD17ZGF0ZUZvcm1hdH1cbiAgICAgICAgICB0aW1lRm9ybWF0PXt0aW1lRm9ybWF0fVxuICAgICAgICAgIHZhbHVlPXttb21lbnQodmFsdWUsIGZvcm1hdCl9XG4gICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlfVxuICAgICAgICAgIG9uRm9jdXM9e3NldEFjdGl2ZVN0eWxlfVxuICAgICAgICAgIG9uQmx1cj17dGhpcy5vbkJsdXJ9XG4gICAgICAgICAgaW5wdXRQcm9wcz17eyBjbGFzc05hbWU6IGNsYXNzTmFtZVdyYXBwZXIsIGlkOiBmb3JJRCB9fVxuICAgICAgICAgIHV0Yz17dGhpcy5waWNrZXJVdGN9XG4gICAgICAgIC8+XG4gICAgICAgIHshaXNEaXNhYmxlZCAmJiA8Tm93QnV0dG9uIHQ9e3R9IGhhbmRsZUNoYW5nZT17diA9PiB0aGlzLmhhbmRsZUNoYW5nZSh2KX0gLz59XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG4iXX0= */")),
    onClick: () => {
      handleChange((0, _moment.default)());
    }
  }, t('editor.editorWidgets.datetime.now')));
}

class DateTimeControl extends _react.default.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "formats", this.getFormats());

    _defineProperty(this, "defaultValue", this.getDefaultValue());

    _defineProperty(this, "pickerUtc", this.getPickerUtc());

    _defineProperty(this, "isValidDate", datetime => _moment.default.isMoment(datetime) || datetime instanceof Date || datetime === '');

    _defineProperty(this, "handleChange", datetime => {
      /**
       * Set the date only if it is valid.
       */
      if (!this.isValidDate(datetime)) {
        return;
      }

      const {
        onChange
      } = this.props;
      const {
        format
      } = this.formats;
      /**
       * Produce a formatted string only if a format is set in the config.
       * Otherwise produce a date object.
       */

      if (format) {
        const formattedValue = datetime ? (0, _moment.default)(datetime).format(format) : '';
        onChange(formattedValue);
      } else {
        const value = _moment.default.isMoment(datetime) ? datetime.toDate() : datetime;
        onChange(value);
      }
    });

    _defineProperty(this, "onBlur", datetime => {
      const {
        setInactiveStyle
      } = this.props;

      if (!this.isValidDate(datetime)) {
        const parsedDate = (0, _moment.default)(datetime);

        if (parsedDate.isValid()) {
          this.handleChange(datetime);
        } else {
          window.alert('The date you entered is invalid.');
        }
      }

      setInactiveStyle();
    });
  }

  getFormats() {
    const {
      field
    } = this.props;
    const format = field.get('format'); // dateFormat and timeFormat are strictly for modifying
    // input field with the date/time pickers

    const dateFormat = field.get('date_format'); // show time-picker? false hides it, true shows it using default format

    let timeFormat = field.get('time_format');

    if (typeof timeFormat === 'undefined') {
      timeFormat = true;
    }

    return {
      format,
      dateFormat,
      timeFormat
    };
  }

  getDefaultValue() {
    const {
      field
    } = this.props;
    const defaultValue = field.get('default');
    return defaultValue;
  }

  getPickerUtc() {
    const {
      field
    } = this.props;
    const pickerUtc = field.get('picker_utc');
    return pickerUtc;
  }

  componentDidMount() {
    const {
      value
    } = this.props;
    /**
     * Set the current date as default value if no value is provided and default is absent. An
     * empty default string means the value is intentionally blank.
     */

    if (value === undefined) {
      setTimeout(() => {
        this.handleChange(this.defaultValue === undefined ? new Date() : this.defaultValue);
      }, 0);
    }
  } // Date is valid if datetime is a moment or Date object otherwise it's a string.
  // Handle the empty case, if the user wants to empty the field.


  render() {
    const {
      forID,
      value,
      classNameWrapper,
      setActiveStyle,
      t,
      isDisabled
    } = this.props;
    const {
      format,
      dateFormat,
      timeFormat
    } = this.formats;
    return (0, _core.jsx)("div", {
      css: /*#__PURE__*/(0, _core.css)(_reactDatetime.default, ";position:relative;;label:DateTimeControl;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9EYXRlVGltZUNvbnRyb2wuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUpnQiIsImZpbGUiOiIuLi8uLi9zcmMvRGF0ZVRpbWVDb250cm9sLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGpzeCwgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgcmVhY3REYXRlVGltZVN0eWxlcyBmcm9tICdyZWFjdC1kYXRldGltZS9jc3MvcmVhY3QtZGF0ZXRpbWUuY3NzJztcbmltcG9ydCBEYXRlVGltZSBmcm9tICdyZWFjdC1kYXRldGltZSc7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7XG5pbXBvcnQgeyBidXR0b25zIH0gZnJvbSAnbmV0bGlmeS1jbXMtdWktZGVmYXVsdCc7XG5cbmZ1bmN0aW9uIE5vd0J1dHRvbih7IHQsIGhhbmRsZUNoYW5nZSB9KSB7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY3NzPXtjc3NgXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgcmlnaHQ6IDIwcHg7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNDBweCk7XG4gICAgICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgICAgICAgei1pbmRleDogMTtcbiAgICAgIGB9XG4gICAgPlxuICAgICAgPGJ1dHRvblxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAke2J1dHRvbnMuYnV0dG9ufVxuICAgICR7YnV0dG9ucy5kZWZhdWx0fVxuICAgICR7YnV0dG9ucy5saWdodEJsdWV9XG4gICAgJHtidXR0b25zLnNtYWxsfVxuYH1cbiAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgIGhhbmRsZUNoYW5nZShtb21lbnQoKSk7XG4gICAgICAgIH19XG4gICAgICA+XG4gICAgICAgIHt0KCdlZGl0b3IuZWRpdG9yV2lkZ2V0cy5kYXRldGltZS5ub3cnKX1cbiAgICAgIDwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEYXRlVGltZUNvbnRyb2wgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIGZpZWxkOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgZm9ySUQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgY2xhc3NOYW1lV3JhcHBlcjogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIHNldEFjdGl2ZVN0eWxlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIHNldEluYWN0aXZlU3R5bGU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgdmFsdWU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5zdHJpbmddKSxcbiAgfTtcblxuICBnZXRGb3JtYXRzKCkge1xuICAgIGNvbnN0IHsgZmllbGQgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgZm9ybWF0ID0gZmllbGQuZ2V0KCdmb3JtYXQnKTtcblxuICAgIC8vIGRhdGVGb3JtYXQgYW5kIHRpbWVGb3JtYXQgYXJlIHN0cmljdGx5IGZvciBtb2RpZnlpbmdcbiAgICAvLyBpbnB1dCBmaWVsZCB3aXRoIHRoZSBkYXRlL3RpbWUgcGlja2Vyc1xuICAgIGNvbnN0IGRhdGVGb3JtYXQgPSBmaWVsZC5nZXQoJ2RhdGVfZm9ybWF0Jyk7XG4gICAgLy8gc2hvdyB0aW1lLXBpY2tlcj8gZmFsc2UgaGlkZXMgaXQsIHRydWUgc2hvd3MgaXQgdXNpbmcgZGVmYXVsdCBmb3JtYXRcbiAgICBsZXQgdGltZUZvcm1hdCA9IGZpZWxkLmdldCgndGltZV9mb3JtYXQnKTtcbiAgICBpZiAodHlwZW9mIHRpbWVGb3JtYXQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aW1lRm9ybWF0ID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgZm9ybWF0LFxuICAgICAgZGF0ZUZvcm1hdCxcbiAgICAgIHRpbWVGb3JtYXQsXG4gICAgfTtcbiAgfVxuXG4gIGdldERlZmF1bHRWYWx1ZSgpIHtcbiAgICBjb25zdCB7IGZpZWxkIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IGRlZmF1bHRWYWx1ZSA9IGZpZWxkLmdldCgnZGVmYXVsdCcpO1xuICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gIH1cblxuICBnZXRQaWNrZXJVdGMoKSB7XG4gICAgY29uc3QgeyBmaWVsZCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBwaWNrZXJVdGMgPSBmaWVsZC5nZXQoJ3BpY2tlcl91dGMnKTtcbiAgICByZXR1cm4gcGlja2VyVXRjO1xuICB9XG5cbiAgZm9ybWF0cyA9IHRoaXMuZ2V0Rm9ybWF0cygpO1xuICBkZWZhdWx0VmFsdWUgPSB0aGlzLmdldERlZmF1bHRWYWx1ZSgpO1xuICBwaWNrZXJVdGMgPSB0aGlzLmdldFBpY2tlclV0YygpO1xuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGNvbnN0IHsgdmFsdWUgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIGN1cnJlbnQgZGF0ZSBhcyBkZWZhdWx0IHZhbHVlIGlmIG5vIHZhbHVlIGlzIHByb3ZpZGVkIGFuZCBkZWZhdWx0IGlzIGFic2VudC4gQW5cbiAgICAgKiBlbXB0eSBkZWZhdWx0IHN0cmluZyBtZWFucyB0aGUgdmFsdWUgaXMgaW50ZW50aW9uYWxseSBibGFuay5cbiAgICAgKi9cbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMuaGFuZGxlQ2hhbmdlKHRoaXMuZGVmYXVsdFZhbHVlID09PSB1bmRlZmluZWQgPyBuZXcgRGF0ZSgpIDogdGhpcy5kZWZhdWx0VmFsdWUpO1xuICAgICAgfSwgMCk7XG4gICAgfVxuICB9XG5cbiAgLy8gRGF0ZSBpcyB2YWxpZCBpZiBkYXRldGltZSBpcyBhIG1vbWVudCBvciBEYXRlIG9iamVjdCBvdGhlcndpc2UgaXQncyBhIHN0cmluZy5cbiAgLy8gSGFuZGxlIHRoZSBlbXB0eSBjYXNlLCBpZiB0aGUgdXNlciB3YW50cyB0byBlbXB0eSB0aGUgZmllbGQuXG4gIGlzVmFsaWREYXRlID0gZGF0ZXRpbWUgPT5cbiAgICBtb21lbnQuaXNNb21lbnQoZGF0ZXRpbWUpIHx8IGRhdGV0aW1lIGluc3RhbmNlb2YgRGF0ZSB8fCBkYXRldGltZSA9PT0gJyc7XG5cbiAgaGFuZGxlQ2hhbmdlID0gZGF0ZXRpbWUgPT4ge1xuICAgIC8qKlxuICAgICAqIFNldCB0aGUgZGF0ZSBvbmx5IGlmIGl0IGlzIHZhbGlkLlxuICAgICAqL1xuICAgIGlmICghdGhpcy5pc1ZhbGlkRGF0ZShkYXRldGltZSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCB7IG9uQ2hhbmdlIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHsgZm9ybWF0IH0gPSB0aGlzLmZvcm1hdHM7XG5cbiAgICAvKipcbiAgICAgKiBQcm9kdWNlIGEgZm9ybWF0dGVkIHN0cmluZyBvbmx5IGlmIGEgZm9ybWF0IGlzIHNldCBpbiB0aGUgY29uZmlnLlxuICAgICAqIE90aGVyd2lzZSBwcm9kdWNlIGEgZGF0ZSBvYmplY3QuXG4gICAgICovXG4gICAgaWYgKGZvcm1hdCkge1xuICAgICAgY29uc3QgZm9ybWF0dGVkVmFsdWUgPSBkYXRldGltZSA/IG1vbWVudChkYXRldGltZSkuZm9ybWF0KGZvcm1hdCkgOiAnJztcbiAgICAgIG9uQ2hhbmdlKGZvcm1hdHRlZFZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgdmFsdWUgPSBtb21lbnQuaXNNb21lbnQoZGF0ZXRpbWUpID8gZGF0ZXRpbWUudG9EYXRlKCkgOiBkYXRldGltZTtcbiAgICAgIG9uQ2hhbmdlKHZhbHVlKTtcbiAgICB9XG4gIH07XG5cbiAgb25CbHVyID0gZGF0ZXRpbWUgPT4ge1xuICAgIGNvbnN0IHsgc2V0SW5hY3RpdmVTdHlsZSB9ID0gdGhpcy5wcm9wcztcblxuICAgIGlmICghdGhpcy5pc1ZhbGlkRGF0ZShkYXRldGltZSkpIHtcbiAgICAgIGNvbnN0IHBhcnNlZERhdGUgPSBtb21lbnQoZGF0ZXRpbWUpO1xuXG4gICAgICBpZiAocGFyc2VkRGF0ZS5pc1ZhbGlkKCkpIHtcbiAgICAgICAgdGhpcy5oYW5kbGVDaGFuZ2UoZGF0ZXRpbWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2luZG93LmFsZXJ0KCdUaGUgZGF0ZSB5b3UgZW50ZXJlZCBpcyBpbnZhbGlkLicpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHNldEluYWN0aXZlU3R5bGUoKTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBmb3JJRCwgdmFsdWUsIGNsYXNzTmFtZVdyYXBwZXIsIHNldEFjdGl2ZVN0eWxlLCB0LCBpc0Rpc2FibGVkIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHsgZm9ybWF0LCBkYXRlRm9ybWF0LCB0aW1lRm9ybWF0IH0gPSB0aGlzLmZvcm1hdHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdlxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAke3JlYWN0RGF0ZVRpbWVTdHlsZXN9O1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgYH1cbiAgICAgID5cbiAgICAgICAgPERhdGVUaW1lXG4gICAgICAgICAgZGF0ZUZvcm1hdD17ZGF0ZUZvcm1hdH1cbiAgICAgICAgICB0aW1lRm9ybWF0PXt0aW1lRm9ybWF0fVxuICAgICAgICAgIHZhbHVlPXttb21lbnQodmFsdWUsIGZvcm1hdCl9XG4gICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlfVxuICAgICAgICAgIG9uRm9jdXM9e3NldEFjdGl2ZVN0eWxlfVxuICAgICAgICAgIG9uQmx1cj17dGhpcy5vbkJsdXJ9XG4gICAgICAgICAgaW5wdXRQcm9wcz17eyBjbGFzc05hbWU6IGNsYXNzTmFtZVdyYXBwZXIsIGlkOiBmb3JJRCB9fVxuICAgICAgICAgIHV0Yz17dGhpcy5waWNrZXJVdGN9XG4gICAgICAgIC8+XG4gICAgICAgIHshaXNEaXNhYmxlZCAmJiA8Tm93QnV0dG9uIHQ9e3R9IGhhbmRsZUNoYW5nZT17diA9PiB0aGlzLmhhbmRsZUNoYW5nZSh2KX0gLz59XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG4iXX0= */"))
    }, (0, _core.jsx)(_reactDatetime2.default, {
      dateFormat: dateFormat,
      timeFormat: timeFormat,
      value: (0, _moment.default)(value, format),
      onChange: this.handleChange,
      onFocus: setActiveStyle,
      onBlur: this.onBlur,
      inputProps: {
        className: classNameWrapper,
        id: forID
      },
      utc: this.pickerUtc
    }), !isDisabled && (0, _core.jsx)(NowButton, {
      t: t,
      handleChange: v => this.handleChange(v)
    }));
  }

}

exports.default = DateTimeControl;

_defineProperty(DateTimeControl, "propTypes", {
  field: _propTypes.default.object.isRequired,
  forID: _propTypes.default.string,
  onChange: _propTypes.default.func.isRequired,
  classNameWrapper: _propTypes.default.string.isRequired,
  setActiveStyle: _propTypes.default.func.isRequired,
  setInactiveStyle: _propTypes.default.func.isRequired,
  value: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string])
});